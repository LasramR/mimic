{  
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://raw.githubusercontent.com/LasramR/mimic/refs/heads/main/.mimic.0.5.1.schema.json",
  "title": ".mimic",
  "description": "Configuration file for Mimic CLI",
  "type": "object",

  "properties": {
    "$schema": {
      "type": "string"
    },
    "git": {
      "description": "Set of properties to initialize a git repository in a mimic",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Wether mimic should initialize a git repository",
          "type": "boolean"
        },
        "main_branch": {
          "description": "The main branch of the repository",
          "type": "string"
        }
      },
      "required": ["enabled"],
      "additionalProperties": false
    },
    "template": {
      "description": "Set of properties to configure a mimic template",
      "type": "object",
      "properties": {
        "ignorePatterns": {
          "description": "Lists of glob that will be ignored during mimic template cloning",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "variables": {
          "description": "Named inputs that will be prompted to the user and substituted in template files, hooks, and paths",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "description": "A template variable",
            "properties": {
              "description": {
                "description": "Additionnal message displayed to the user when prompted for the variable value", 
                "type": "string"
              },
              "type": {
                "description": "Constrains user input",
                "type": "string",
                "enum": ["string", "number", "boolean", "regex", "choice"]
              },
              "required": {
                "description": "Wether the user must specify a valid value",
                "type": "boolean"
              },
              "default": {
                "description": "Default value of the variable (Cannot be set if variable is required)"
              }
            },
            "required": ["type"],
            "allOf": [
              {
                "if": {
                  "properties": { "type": { "const": "string" } }
                },
                "then": {
                  "properties": {
                    "default": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "if": {
                  "properties": { "type": { "const": "number" } }
                },
                "then": {
                  "properties": {
                    "default": {
                      "type": "number"
                    }
                  }
                }
              },
              {
                "if": {
                  "properties": { "type": { "const": "boolean" } }
                },
                "then": {
                  "properties": {
                    "item": {
                      "description": "Boolean format in templated files after processing",
                      "type": "string",
                      "enum": ["Capitalized", "lower"]
                    },
                    "default": {
                      "type": "boolean"
                    }
                  },
                  "required": ["type"]
                }
              },
              {
                "if": {
                  "properties": { "type": { "const": "regex" } }
                },
                "then": {
                  "properties": {
                    "item": {
                      "description": "Python regex that constrains the accepted value",
                      "type": "string"
                    },
                    "default": {
                      "type": "string"
                    }
                  },
                  "required": ["type", "item"]
                }
              },
              {
                "if": {
                  "properties": { "type": { "const": "choice" } }
                },
                "then": {
                  "properties": {
                    "item": {
                      "description": "Set of accepted value",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1
                    },
                    "default": {
                      "type": "string"
                    }
                  },
                  "required": ["type", "item"]
                }
              },
              {
                "if": {
                  "properties": { "required": { "not": { "const": false } } }
                },
                "then": {
                  "properties": { 
                    "default": {
                      "type": "null"
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "additionalProperties": false
    },
    "hooks": {
      "description": "List of scripts to trigger at specific times",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Script name",
            "type": "string"
          },
          "when": {
            "description": "Time to trigger the script",
            "type": "string",
            "enum": ["pre_template_injection", "post_template_injection"]
          },
          "steps": {
            "description": "List of commands run by the script",
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1
          },
          "ignore_error": {
            "description": "Whether to continue execution if the script fails",
            "type": "boolean"
          },
          "ignore_user_skip": {
            "description": "Whether to continue execution if the user refuses to run the script",
            "type": "boolean"
          }
        },
        "required": ["when", "steps"],
        "additionalProperties": false
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false
}